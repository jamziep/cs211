#include "circle.h"
#include <stdio.h>

bool valid_circle(struct circle c)
{
    //extract data about the radius of circle
    double circle_radius = c.radius;

    //if radius is positive, it's a valid circle
    if (circle_radius >0){
        return true;
    } else {
        return false;
    }
}

struct circle read_circle(void)
{
    //later: include checks as to whether the inputs were valid
    
    //basic goal of reading inputs
    double x, y, radius;

    printf("Please enter the x, y, and radius of circle:\n");

    //use %g directive for doubles !EDITED: lg is what compiler wants
    int valid_inputs = scanf("%lg%lg%lg", &x, &y, &radius);

    //check to see if all the inputs to scanf were valid
    if (valid_inputs == 3) {
        struct circle c1 = {x, y, radius};
        return c1;
        
    } else {
        //printf("Valid inputs: %d",valid_inputs);
        struct circle c1 = {0.0, 0.0, -1.0};
        return c1;
    }
    
    //return (struct circle) {0, 0, -1};
}

bool overlapped_circles(struct circle c1, struct circle c2)
{
    //
    // TODO: replace with your code:
    //

    double x_dist = c1.x - c2.x;
    double y_dist = c1.y - c2.y;
    double sum_radii = c1.radius + c2.radius;

    //rather than take sqrt of distance formula we can compare squares
    double dist_squared = x_dist * x_dist + y_dist * y_dist;
    double radii_squared = sum_radii * sum_radii;

    //two circles are overlapped if the sum of their radii is greater
    //than the distance between their centers
    if (radii_squared > dist_squared) {
        return false;
    
        // return false;
}

